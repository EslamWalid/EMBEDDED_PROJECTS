
DELAY_USE_T0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000ae  000001c2  2**0
                  ALLOC
  2 .comment      0000002f  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000237  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000245  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007ba  00000000  00000000  00000275  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000543  00000000  00000000  00000a2f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000020e  00000000  00000000  00000f72  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  00001180  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000196  00000000  00000000  000011d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000049  00000000  00000000  0000136e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000013b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000126  00000126  000001fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.timer_init 00000018  000000ee  000000ee  000001c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_11 00000040  000000ae  000000ae  00000182  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.main    0000000a  0000011c  0000011c  000001f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .bss.OV_time  00000001  00800060  00800060  00000208  2**0
                  ALLOC
 18 .text.__dummy_fini 00000002  0000012e  0000012e  00000202  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_funcs_on_exit 00000002  00000130  00000130  00000204  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_simulator_exit 00000002  00000132  00000132  00000206  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.exit    00000016  00000106  00000106  000001da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text._Exit   00000004  0000012a  0000012a  000001fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2d 00 	jmp	0x5a	; 0x5a <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <_etext>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 61       	ori	r16, 0x10	; 16
  58:	80 00       	.word	0x0080	; ????

0000005a <__ctors_end>:
  5a:	11 24       	eor	r1, r1
  5c:	1f be       	out	0x3f, r1	; 63
  5e:	cf e5       	ldi	r28, 0x5F	; 95
  60:	d8 e0       	ldi	r29, 0x08	; 8
  62:	de bf       	out	0x3e, r29	; 62
  64:	cd bf       	out	0x3d, r28	; 61

00000066 <__do_copy_data>:
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	40 e0       	ldi	r20, 0x00	; 0
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__do_clear_bss+0x8>
  6e:	b5 91       	lpm	r27, Z+
  70:	a5 91       	lpm	r26, Z+
  72:	35 91       	lpm	r19, Z+
  74:	25 91       	lpm	r18, Z+
  76:	05 91       	lpm	r16, Z+
  78:	07 fd       	sbrc	r16, 7
  7a:	0c c0       	rjmp	.+24     	; 0x94 <__do_clear_bss>
  7c:	95 91       	lpm	r25, Z+
  7e:	85 91       	lpm	r24, Z+
  80:	ef 01       	movw	r28, r30
  82:	f9 2f       	mov	r31, r25
  84:	e8 2f       	mov	r30, r24
  86:	05 90       	lpm	r0, Z+
  88:	0d 92       	st	X+, r0
  8a:	a2 17       	cp	r26, r18
  8c:	b3 07       	cpc	r27, r19
  8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0x20>
  90:	fe 01       	movw	r30, r28
  92:	04 c0       	rjmp	.+8      	; 0x9c <__do_clear_bss+0x8>

00000094 <__do_clear_bss>:
  94:	1d 92       	st	X+, r1
  96:	a2 17       	cp	r26, r18
  98:	b3 07       	cpc	r27, r19
  9a:	e1 f7       	brne	.-8      	; 0x94 <__do_clear_bss>
  9c:	e9 35       	cpi	r30, 0x59	; 89
  9e:	f4 07       	cpc	r31, r20
  a0:	31 f7       	brne	.-52     	; 0x6e <__do_copy_data+0x8>
  a2:	0e 94 8e 00 	call	0x11c	; 0x11c <main>
  a6:	0c 94 83 00 	jmp	0x106	; 0x106 <exit>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>

Disassembly of section .text:

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.timer_init:

000000ee <timer_init>:
volatile uint8_t OV_time=0;


void timer_init(void)
{
	TCCR0=0;
  ee:	13 be       	out	0x33, r1	; 51
	TIMSK=0;
  f0:	19 be       	out	0x39, r1	; 57
	TCCR0|=(1<<CS00)|(1<<CS02);
  f2:	83 b7       	in	r24, 0x33	; 51
  f4:	85 60       	ori	r24, 0x05	; 5
  f6:	83 bf       	out	0x33, r24	; 51
	TIMSK|=(1<<TOIE0);
  f8:	89 b7       	in	r24, 0x39	; 57
  fa:	81 60       	ori	r24, 0x01	; 1
  fc:	89 bf       	out	0x39, r24	; 57
	TCNT0=182;
  fe:	86 eb       	ldi	r24, 0xB6	; 182
 100:	82 bf       	out	0x32, r24	; 50
	sei();
 102:	78 94       	sei
 104:	08 95       	ret

Disassembly of section .text.__vector_11:

000000ae <__vector_11>:
}


ISR(TIMER0_OVF_vect)
{
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	8f 93       	push	r24
  ba:	9f 93       	push	r25
	if(OV_time == 3){
  bc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  c0:	83 30       	cpi	r24, 0x03	; 3
  c2:	49 f4       	brne	.+18     	; 0xd6 <__vector_11+0x28>
		OV_time=0;
  c4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
		TCNT0=182;
  c8:	86 eb       	ldi	r24, 0xB6	; 182
  ca:	82 bf       	out	0x32, r24	; 50
		PORTC^=(1<<PC0);
  cc:	95 b3       	in	r25, 0x15	; 21
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	89 27       	eor	r24, r25
  d2:	85 bb       	out	0x15, r24	; 21
  d4:	05 c0       	rjmp	.+10     	; 0xe0 <__vector_11+0x32>
	}
	else{
	OV_time++;
  d6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  da:	8f 5f       	subi	r24, 0xFF	; 255
  dc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	}
	
	
	
}
  e0:	9f 91       	pop	r25
  e2:	8f 91       	pop	r24
  e4:	0f 90       	pop	r0
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	0f 90       	pop	r0
  ea:	1f 90       	pop	r1
  ec:	18 95       	reti

Disassembly of section .text.main:

0000011c <main>:



int main(void)
{
	timer_init();
 11c:	0e 94 77 00 	call	0xee	; 0xee <timer_init>
	
	DDRC=0x01;
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	84 bb       	out	0x14, r24	; 20
 124:	ff cf       	rjmp	.-2      	; 0x124 <main+0x8>

Disassembly of section .text.__dummy_fini:

0000012e <_fini>:
 12e:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000130 <__funcs_on_exit>:
 130:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000132 <__simulator_exit>:
 132:	08 95       	ret

Disassembly of section .text.exit:

00000106 <exit>:
 106:	ec 01       	movw	r28, r24
 108:	0e 94 98 00 	call	0x130	; 0x130 <__funcs_on_exit>
 10c:	0e 94 97 00 	call	0x12e	; 0x12e <_fini>
 110:	ce 01       	movw	r24, r28
 112:	0e 94 99 00 	call	0x132	; 0x132 <__simulator_exit>
 116:	ce 01       	movw	r24, r28
 118:	0e 94 95 00 	call	0x12a	; 0x12a <_Exit>

Disassembly of section .text._Exit:

0000012a <_Exit>:
 12a:	0e 94 55 00 	call	0xaa	; 0xaa <_exit>
